@use 'abstracts/modules/generate';
@use 'abstracts/modules/math';

:root {
	@include generate.all((
			'colors' : (
					'src' : ('neutral' : (hsl(225, 13%, 12%))),
					'tints' : (30%, 55%, 80%, 94%, 100%),
					'shades' : (30%),
			),
			'font-types' : (
					'base' : 0.64rem,
					'ratio' : 1.333,
					'length' : 4,
			),
			'fluid-font-types' : (
					'src' : (
							math.clamped(3rem, 4.5rem),
							math.clamped(3rem, 6rem),
							math.clamped(7.5rem, 15.625rem, $width-md, $width-xl)
					),
			),
			'utilities' : (
					'src' : (
							generate.$font-weights,
							generate.$line-heights,
							generate.$measures,
							generate.$displays,
							generate.$text-aligns,
							generate.$aligns,
							generate.$justifys,
							generate.$self-aligns,
							generate.$self-justifys,
							generate.$directions,
					)
			),)
	);

	--ff-primary         : 'League Spartan', sans-serif;
	--ff-body            : var(--ff-primary);
	--ff-heading         : var(--ff-primary);
	--outline-size       : max(1px, 0.15em);
	--outline-style      : solid;
	--outline-color      : currentColor;
	--body-padding       : #{math.clamped(2rem, 6rem, $width-md, $width-xl)};
	--body-padding-inner : #{math.clamped(2rem, 10rem, $width-md, $width-xl)};
	--body-size          : 69.375rem;
	--body-sizing        : min(100% - var(--body-padding) * 2, var(--body-size));
}

.sr-only {
	position    : absolute;
	overflow    : hidden;
	margin      : -1px;
	padding     : 0;
	width       : 1px;
	height      : 1px;
	white-space : nowrap;
	clip        : rect(0, 0, 0, 0);
	border      : 0;
}

.darken-image {
	position : relative;

	&::before {
		content          : "";
		position         : absolute;
		inset            : 0;
		background-color : hsl(var(--clr-neutral-7));
		opacity          : var(--darken-image-opacity, 0.45);
		border-radius    : inherit;
		transition       : opacity var(--darken-image-duration, 300ms) var(--darken-image-timing, ease-in-out);
	}
}

:where([class^="align"], [class*="direction"], [class^="justify"]) {
	display : flex;
}